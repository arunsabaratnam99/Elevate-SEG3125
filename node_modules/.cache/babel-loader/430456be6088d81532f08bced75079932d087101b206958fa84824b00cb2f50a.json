{"ast":null,"code":"var _jsxFileName = \"/Users/arunsabaratnam/Documents/GitHub/SEG3103/Assignment2/ElevateWebsite/Elevate-SEG3125/src/components/WalletPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './WalletPopup.css';\nimport WalletVector from './icons/WalletVector.svg';\nimport DollarVector from './icons/DollarVector.svg';\nimport PlusIcon from './icons/PlusVector.svg';\nimport ErrorVector from './icons/ErrorVector.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletPopup = ({\n  isOpen,\n  onClose,\n  walletAmount,\n  registeredCards,\n  onSaveCard,\n  onDeposit\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState('deposit');\n  const [selectedCard, setSelectedCard] = useState('');\n  const [newCardNumber, setNewCardNumber] = useState('');\n  const [newCardName, setNewCardName] = useState('');\n  const [newExpiryMonth, setNewExpiryMonth] = useState('');\n  const [newExpiryYear, setNewExpiryYear] = useState('');\n  const [expiryMonth, setExpiryMonth] = useState('');\n  const [expiryYear, setExpiryYear] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [depositAmount, setDepositAmount] = useState('');\n  const [isAddCardExpanded, setIsAddCardExpanded] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [focused, setFocused] = useState({});\n  const [bankName, setBankName] = useState('');\n  const [accountType, setAccountType] = useState('');\n  const [accountNumber, setAccountNumber] = useState('');\n  const [swiftCode, setSwiftCode] = useState('');\n  const [bankTransitCode, setBankTransitCode] = useState('');\n  const [bankBranchCode, setBankBranchCode] = useState('');\n  const [withdrawalAmount, setWithdrawalAmount] = useState('');\n  useEffect(() => {\n    // Clear all input values and errors when the active tab changes\n    setSelectedCard('');\n    setNewCardNumber('');\n    setNewCardName('');\n    setNewExpiryMonth('');\n    setNewExpiryYear('');\n    setExpiryMonth('');\n    setExpiryYear('');\n    setCvv('');\n    setDepositAmount('');\n    setErrors({});\n    setFocused({});\n  }, [activeTab]);\n  const handleBlur = event => {\n    const {\n      name\n    } = event.target;\n    setFocused(prevFocused => ({\n      ...prevFocused,\n      [name]: false\n    }));\n\n    // Validate inputs based on their names\n    if (name === 'newCardNumber' && !newCardNumber) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        newCardNumber: 'This field is required.'\n      }));\n    } else if (name === 'newCardName' && !newCardName) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        newCardName: 'This field is required.'\n      }));\n    } else if ((name === 'newExpiryMonth' || name === 'newExpiryYear') && (!newExpiryMonth || !newExpiryYear)) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        newExpiryDate: 'This field is required.'\n      }));\n    } else if (name === 'selectedCard' && !selectedCard) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        selectedCard: 'Please select a card.'\n      }));\n    } else if (name === 'cvv' && !cvv) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        cvv: 'This field is required.'\n      }));\n    } else if (name === 'depositAmount' && (!depositAmount || depositAmount < 10)) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        depositAmount: 'Deposit amount must be at least $10.'\n      }));\n    } else {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        [name]: undefined\n      }));\n    }\n  };\n  const handleFocus = event => {\n    const {\n      name\n    } = event.target;\n    setFocused(prevFocused => ({\n      ...prevFocused,\n      [name]: true\n    }));\n  };\n  const formatCardNumber = value => {\n    return value.replace(/\\s?/g, '').replace(/(\\d{4})/g, '$1 ').trim();\n  };\n  const handleCardNumberChange = event => {\n    const {\n      value\n    } = event.target;\n    if (/^\\d*$/.test(value.replace(/\\s/g, '')) && value.replace(/\\s/g, '').length <= 16) {\n      setNewCardNumber(formatCardNumber(value));\n      if (errors.newCardNumber) {\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          newCardNumber: undefined\n        }));\n      }\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === 'newCardName' && /^[a-zA-Z\\s]*$/.test(value)) {\n      setNewCardName(value);\n    } else if (name === 'depositAmount') {\n      setDepositAmount(value);\n    } else if (name === 'cvv' && /^\\d{0,3}$/.test(value)) {\n      setCvv(value);\n    }\n    if (errors[name]) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        [name]: undefined\n      }));\n    }\n  };\n  const handleSelectChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    switch (name) {\n      case 'newExpiryMonth':\n        setNewExpiryMonth(value);\n        break;\n      case 'newExpiryYear':\n        setNewExpiryYear(value);\n        break;\n      case 'expiryMonth':\n        setExpiryMonth(value);\n        break;\n      case 'expiryYear':\n        setExpiryYear(value);\n        break;\n      default:\n        break;\n    }\n    if (errors.expiryDate || errors.selectedCard === 'Card Invalid') {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        expiryDate: undefined,\n        selectedCard: undefined\n      }));\n    }\n  };\n  const toggleAddCard = () => {\n    if (isAddCardExpanded) {\n      // Clear errors and focused state when closing the dropdown\n      setErrors({});\n      setFocused({});\n      // Clear form fields when closing the dropdown\n      setNewCardNumber('');\n      setNewCardName('');\n      setNewExpiryMonth('');\n      setNewExpiryYear('');\n      setCvv('');\n      setDepositAmount('');\n    } else {\n      // Clear errors outside the dropdown (except for registered cards) when opening the dropdown\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        expiryDate: undefined,\n        cvv: undefined,\n        depositAmount: undefined\n      }));\n      setExpiryMonth('');\n      setExpiryYear('');\n      setCvv('');\n      setDepositAmount('');\n    }\n    setIsAddCardExpanded(!isAddCardExpanded);\n  };\n  const handleSaveCard = () => {\n    const newErrors = {};\n    if (!newCardNumber) {\n      newErrors.newCardNumber = 'This field is required.';\n    } else if (newCardNumber.replace(/\\s/g, '').length !== 16) {\n      newErrors.newCardNumber = 'Card number must be 16 digits.';\n    }\n    if (!newCardName) {\n      newErrors.newCardName = 'This field is required.';\n    }\n    if (!newExpiryMonth || !newExpiryYear) {\n      newErrors.newExpiryDate = 'This field is required.';\n    }\n    if (Object.keys(newErrors).length === 0) {\n      const newCard = {\n        number: newCardNumber,\n        name: newCardName,\n        expiryMonth: newExpiryMonth,\n        expiryYear: newExpiryYear,\n        displayName: `**** ${newCardNumber.slice(-4)} - ${newCardName}`\n      };\n      onSaveCard(newCard);\n\n      // Clear the form fields and collapse the add card section\n      setNewCardNumber('');\n      setNewCardName('');\n      setNewExpiryMonth('');\n      setNewExpiryYear('');\n      setCvv('');\n      setIsAddCardExpanded(false);\n    } else {\n      setErrors(newErrors);\n    }\n  };\n  const handleCardSelect = event => {\n    const selectedValue = event.target.value;\n    setSelectedCard(selectedValue);\n    const selectedCard = registeredCards.find(card => card.displayName === selectedValue);\n    if (selectedCard) {\n      setExpiryMonth(selectedCard.expiryMonth);\n      setExpiryYear(selectedCard.expiryYear);\n    }\n  };\n  const handleDeposit = () => {\n    const newErrors = {};\n    if (!selectedCard) {\n      newErrors.selectedCard = 'Please select a card.';\n    }\n    if (!expiryMonth || !expiryYear) {\n      newErrors.expiryDate = 'This field is required.';\n    }\n    if (!cvv) {\n      newErrors.cvv = 'This field is required.';\n    }\n    if (!depositAmount || depositAmount < 10) {\n      newErrors.depositAmount = 'Deposit amount must be at least $10.';\n    }\n    const selectedCardDetails = registeredCards.find(card => card.displayName === selectedCard);\n    if (selectedCardDetails && (selectedCardDetails.expiryMonth !== expiryMonth || selectedCardDetails.expiryYear !== expiryYear)) {\n      newErrors.selectedCard = 'Card Invalid';\n    }\n    if (Object.keys(newErrors).length === 0) {\n      onDeposit(parseFloat(depositAmount));\n      // Clear deposit-related fields after successful deposit\n      setSelectedCard('');\n      setExpiryMonth('');\n      setExpiryYear('');\n      setCvv('');\n      setDepositAmount('');\n      alert('Deposit successful!');\n    } else {\n      setErrors(newErrors);\n    }\n  };\n  const handleWithdraw = () => {\n    const newErrors = {};\n    if (!bankName) {\n      newErrors.bankName = 'Please select a bank.';\n    }\n    if (!accountType) {\n      newErrors.accountType = 'Please select an account type.';\n    }\n    if (!accountNumber) {\n      newErrors.accountNumber = 'Please enter your account number.';\n    }\n    if (!swiftCode) {\n      newErrors.swiftCode = 'Please enter the SWIFT/BIC code.';\n    }\n    if (!bankTransitCode) {\n      newErrors.bankTransitCode = 'Please enter the bank transit code.';\n    }\n    if (!bankBranchCode) {\n      newErrors.bankBranchCode = 'Please enter the bank branch code.';\n    }\n    if (!withdrawalAmount || withdrawalAmount < 10 || withdrawalAmount > 50000) {\n      newErrors.withdrawalAmount = 'Withdrawal amount must be between $10.00 and $50,000.00.';\n    }\n    if (Object.keys(newErrors).length === 0) {\n      // Handle withdrawal logic here\n      alert('Withdrawal successful!');\n      // Clear withdrawal-related fields after successful withdrawal\n      setBankName('');\n      setAccountType('');\n      setAccountNumber('');\n      setSwiftCode('');\n      setBankTransitCode('');\n      setBankBranchCode('');\n      setWithdrawalAmount('');\n    } else {\n      setErrors(newErrors);\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `wallet-popup ${isOpen ? 'open' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-popup-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: WalletVector,\n            alt: \"Wallet\",\n            className: \"wallet-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), \" Wallet\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wallet-close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `wallet-tab ${activeTab === 'deposit' ? 'active' : ''}`,\n          onClick: () => setActiveTab('deposit'),\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `wallet-tab ${activeTab === 'withdraw' ? 'active' : ''}`,\n          onClick: () => setActiveTab('withdraw'),\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-tab-fill\",\n          style: {\n            left: activeTab === 'deposit' ? '0%' : '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-balance-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-balance\",\n          children: [\"$\", walletAmount.toFixed(2), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: DollarVector,\n            alt: \"Dollar Icon\",\n            className: \"dollar-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-content\",\n        children: [activeTab === 'deposit' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deposit-content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), activeTab === 'withdraw' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"withdraw-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bank-name\",\n            children: \"Bank Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"bank-name\",\n            value: bankName,\n            onChange: e => setBankName(e.target.value),\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            name: \"bankName\",\n            className: errors.bankName ? focused.bankName ? 'select-error-focused' : 'select-error' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a bank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Bank of America\",\n              children: \"Bank of America\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Chase\",\n              children: \"Chase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Wells Fargo\",\n              children: \"Wells Fargo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), errors.bankName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ErrorVector,\n              alt: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this), \" \", errors.bankName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"account-type\",\n            children: \"Account Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"account-type\",\n            value: accountType,\n            onChange: e => setAccountType(e.target.value),\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            name: \"accountType\",\n            className: errors.accountType ? focused.accountType ? 'select-error-focused' : 'select-error' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select account type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Checking\",\n              children: \"Checking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Savings\",\n              children: \"Savings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), errors.accountType && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ErrorVector,\n              alt: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 19\n            }, this), \" \", errors.accountType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"account-number\",\n            children: \"Account Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"account-number\",\n            value: accountNumber,\n            onChange: e => setAccountNumber(e.target.value),\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            name: \"accountNumber\",\n            className: errors.accountNumber ? focused.accountNumber ? 'input-error-focused' : 'input-error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), errors.accountNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ErrorVector,\n              alt: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this), \" \", errors.accountNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"swift-code\",\n            children: \"SWIFT/BIC Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"swift-code\",\n            value: swiftCode,\n            onChange: e => setSwiftCode(e.target.value),\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            name: \"swiftCode\",\n            className: errors.swiftCode ? focused.swiftCode ? 'input-error-focused' : 'input-error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this), errors.swiftCode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ErrorVector,\n              alt: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this), \" \", errors.swiftCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bank-transit\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bank-transit-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"bank-transit-code\",\n                children: \"Bank Transit Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"bank-transit-code\",\n                value: bankTransitCode,\n                onChange: e => setBankTransitCode(e.target.value),\n                onBlur: handleBlur,\n                onFocus: handleFocus,\n                name: \"bankTransitCode\",\n                className: errors.bankTransitCode ? focused.bankTransitCode ? 'input-error-focused' : 'input-error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), errors.bankTransitCode && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: ErrorVector,\n                  alt: \"Error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 23\n                }, this), \" \", errors.bankTransitCode]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bank-transit-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"bank-branch-code\",\n                children: \"Bank Branch Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"bank-branch-code\",\n                value: bankBranchCode,\n                onChange: e => setBankBranchCode(e.target.value),\n                onBlur: handleBlur,\n                onFocus: handleFocus,\n                name: \"bankBranchCode\",\n                className: errors.bankBranchCode ? focused.bankBranchCode ? 'input-error-focused' : 'input-error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this), errors.bankBranchCode && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: ErrorVector,\n                  alt: \"Error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 23\n                }, this), \" \", errors.bankBranchCode]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"withdrawal-amount\",\n            children: \"Withdrawal Amount (Min $10.00/Max $50,000.00)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"withdrawal-amount\",\n            value: withdrawalAmount,\n            onChange: e => setWithdrawalAmount(e.target.value),\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            name: \"withdrawalAmount\",\n            className: errors.withdrawalAmount ? focused.withdrawalAmount ? 'input-error-focused' : 'input-error' : '',\n            min: \"10\",\n            max: \"50000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), errors.withdrawalAmount && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ErrorVector,\n              alt: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 19\n            }, this), \" \", errors.withdrawalAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"withdraw-btn\",\n            onClick: handleWithdraw,\n            children: \"Withdraw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletPopup, \"ODfhmWeV4SYWdPgfepbP+gilNkQ=\");\n_c = WalletPopup;\nexport default WalletPopup;\nvar _c;\n$RefreshReg$(_c, \"WalletPopup\");","map":{"version":3,"names":["React","useState","useEffect","WalletVector","DollarVector","PlusIcon","ErrorVector","jsxDEV","_jsxDEV","WalletPopup","isOpen","onClose","walletAmount","registeredCards","onSaveCard","onDeposit","_s","activeTab","setActiveTab","selectedCard","setSelectedCard","newCardNumber","setNewCardNumber","newCardName","setNewCardName","newExpiryMonth","setNewExpiryMonth","newExpiryYear","setNewExpiryYear","expiryMonth","setExpiryMonth","expiryYear","setExpiryYear","cvv","setCvv","depositAmount","setDepositAmount","isAddCardExpanded","setIsAddCardExpanded","errors","setErrors","focused","setFocused","bankName","setBankName","accountType","setAccountType","accountNumber","setAccountNumber","swiftCode","setSwiftCode","bankTransitCode","setBankTransitCode","bankBranchCode","setBankBranchCode","withdrawalAmount","setWithdrawalAmount","handleBlur","event","name","target","prevFocused","prevErrors","newExpiryDate","undefined","handleFocus","formatCardNumber","value","replace","trim","handleCardNumberChange","test","length","handleInputChange","handleSelectChange","expiryDate","toggleAddCard","handleSaveCard","newErrors","Object","keys","newCard","number","displayName","slice","handleCardSelect","selectedValue","find","card","handleDeposit","selectedCardDetails","parseFloat","alert","handleWithdraw","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","left","toFixed","htmlFor","id","onChange","e","onBlur","onFocus","disabled","type","min","max","_c","$RefreshReg$"],"sources":["/Users/arunsabaratnam/Documents/GitHub/SEG3103/Assignment2/ElevateWebsite/Elevate-SEG3125/src/components/WalletPopup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './WalletPopup.css';\nimport WalletVector from './icons/WalletVector.svg';\nimport DollarVector from './icons/DollarVector.svg';\nimport PlusIcon from './icons/PlusVector.svg';\nimport ErrorVector from './icons/ErrorVector.svg';\n\nconst WalletPopup = ({ isOpen, onClose, walletAmount, registeredCards, onSaveCard, onDeposit }) => {\n  const [activeTab, setActiveTab] = useState('deposit');\n  const [selectedCard, setSelectedCard] = useState('');\n  const [newCardNumber, setNewCardNumber] = useState('');\n  const [newCardName, setNewCardName] = useState('');\n  const [newExpiryMonth, setNewExpiryMonth] = useState('');\n  const [newExpiryYear, setNewExpiryYear] = useState('');\n  const [expiryMonth, setExpiryMonth] = useState('');\n  const [expiryYear, setExpiryYear] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [depositAmount, setDepositAmount] = useState('');\n  const [isAddCardExpanded, setIsAddCardExpanded] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [focused, setFocused] = useState({});\n  const [bankName, setBankName] = useState('');\n  const [accountType, setAccountType] = useState('');\n  const [accountNumber, setAccountNumber] = useState('');\n  const [swiftCode, setSwiftCode] = useState('');\n  const [bankTransitCode, setBankTransitCode] = useState('');\n  const [bankBranchCode, setBankBranchCode] = useState('');\n  const [withdrawalAmount, setWithdrawalAmount] = useState('');\n\n  useEffect(() => {\n    // Clear all input values and errors when the active tab changes\n    setSelectedCard('');\n    setNewCardNumber('');\n    setNewCardName('');\n    setNewExpiryMonth('');\n    setNewExpiryYear('');\n    setExpiryMonth('');\n    setExpiryYear('');\n    setCvv('');\n    setDepositAmount('');\n    setErrors({});\n    setFocused({});\n  }, [activeTab]);\n\n  const handleBlur = (event) => {\n    const { name } = event.target;\n    setFocused((prevFocused) => ({\n      ...prevFocused,\n      [name]: false,\n    }));\n\n    // Validate inputs based on their names\n    if (name === 'newCardNumber' && !newCardNumber) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        newCardNumber: 'This field is required.',\n      }));\n    } else if (name === 'newCardName' && !newCardName) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        newCardName: 'This field is required.',\n      }));\n    } else if ((name === 'newExpiryMonth' || name === 'newExpiryYear') && (!newExpiryMonth || !newExpiryYear)) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        newExpiryDate: 'This field is required.',\n      }));\n    } else if (name === 'selectedCard' && !selectedCard) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        selectedCard: 'Please select a card.',\n      }));\n    } else if (name === 'cvv' && !cvv) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        cvv: 'This field is required.',\n      }));\n    } else if (name === 'depositAmount' && (!depositAmount || depositAmount < 10)) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        depositAmount: 'Deposit amount must be at least $10.',\n      }));\n    } else {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: undefined,\n      }));\n    }\n  };\n\n  const handleFocus = (event) => {\n    const { name } = event.target;\n    setFocused((prevFocused) => ({\n      ...prevFocused,\n      [name]: true,\n    }));\n  };\n\n  const formatCardNumber = (value) => {\n    return value.replace(/\\s?/g, '').replace(/(\\d{4})/g, '$1 ').trim();\n  };\n\n  const handleCardNumberChange = (event) => {\n    const { value } = event.target;\n    if (/^\\d*$/.test(value.replace(/\\s/g, '')) && value.replace(/\\s/g, '').length <= 16) {\n      setNewCardNumber(formatCardNumber(value));\n      if (errors.newCardNumber) {\n        setErrors((prevErrors) => ({\n          ...prevErrors,\n          newCardNumber: undefined,\n        }));\n      }\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    if (name === 'newCardName' && /^[a-zA-Z\\s]*$/.test(value)) {\n      setNewCardName(value);\n    } else if (name === 'depositAmount') {\n      setDepositAmount(value);\n    } else if (name === 'cvv' && /^\\d{0,3}$/.test(value)) {\n      setCvv(value);\n    }\n\n    if (errors[name]) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: undefined,\n      }));\n    }\n  };\n\n  const handleSelectChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'newExpiryMonth':\n        setNewExpiryMonth(value);\n        break;\n      case 'newExpiryYear':\n        setNewExpiryYear(value);\n        break;\n      case 'expiryMonth':\n        setExpiryMonth(value);\n        break;\n      case 'expiryYear':\n        setExpiryYear(value);\n        break;\n      default:\n        break;\n    }\n\n    if (errors.expiryDate || errors.selectedCard === 'Card Invalid') {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        expiryDate: undefined,\n        selectedCard: undefined,\n      }));\n    }\n  };\n\n  const toggleAddCard = () => {\n    if (isAddCardExpanded) {\n      // Clear errors and focused state when closing the dropdown\n      setErrors({});\n      setFocused({});\n      // Clear form fields when closing the dropdown\n      setNewCardNumber('');\n      setNewCardName('');\n      setNewExpiryMonth('');\n      setNewExpiryYear('');\n      setCvv('');\n      setDepositAmount('');\n    } else {\n      // Clear errors outside the dropdown (except for registered cards) when opening the dropdown\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        expiryDate: undefined,\n        cvv: undefined,\n        depositAmount: undefined,\n      }));\n      setExpiryMonth('');\n      setExpiryYear('');\n      setCvv('');\n      setDepositAmount('');\n    }\n    setIsAddCardExpanded(!isAddCardExpanded);\n  };\n\n  const handleSaveCard = () => {\n    const newErrors = {};\n\n    if (!newCardNumber) {\n      newErrors.newCardNumber = 'This field is required.';\n    } else if (newCardNumber.replace(/\\s/g, '').length !== 16) {\n      newErrors.newCardNumber = 'Card number must be 16 digits.';\n    }\n\n    if (!newCardName) {\n      newErrors.newCardName = 'This field is required.';\n    }\n\n    if (!newExpiryMonth || !newExpiryYear) {\n      newErrors.newExpiryDate = 'This field is required.';\n    }\n\n    if (Object.keys(newErrors).length === 0) {\n      const newCard = {\n        number: newCardNumber,\n        name: newCardName,\n        expiryMonth: newExpiryMonth,\n        expiryYear: newExpiryYear,\n        displayName: `**** ${newCardNumber.slice(-4)} - ${newCardName}`\n      };\n\n      onSaveCard(newCard);\n\n      // Clear the form fields and collapse the add card section\n      setNewCardNumber('');\n      setNewCardName('');\n      setNewExpiryMonth('');\n      setNewExpiryYear('');\n      setCvv('');\n      setIsAddCardExpanded(false);\n    } else {\n      setErrors(newErrors);\n    }\n  };\n\n  const handleCardSelect = (event) => {\n    const selectedValue = event.target.value;\n    setSelectedCard(selectedValue);\n\n    const selectedCard = registeredCards.find(card => card.displayName === selectedValue);\n    if (selectedCard) {\n      setExpiryMonth(selectedCard.expiryMonth);\n      setExpiryYear(selectedCard.expiryYear);\n    }\n  };\n\n  const handleDeposit = () => {\n    const newErrors = {};\n\n    if (!selectedCard) {\n      newErrors.selectedCard = 'Please select a card.';\n    }\n\n    if (!expiryMonth || !expiryYear) {\n      newErrors.expiryDate = 'This field is required.';\n    }\n\n    if (!cvv) {\n      newErrors.cvv = 'This field is required.';\n    }\n\n    if (!depositAmount || depositAmount < 10) {\n      newErrors.depositAmount = 'Deposit amount must be at least $10.';\n    }\n\n    const selectedCardDetails = registeredCards.find(card => card.displayName === selectedCard);\n    if (selectedCardDetails && (selectedCardDetails.expiryMonth !== expiryMonth || selectedCardDetails.expiryYear !== expiryYear)) {\n      newErrors.selectedCard = 'Card Invalid';\n    }\n\n    if (Object.keys(newErrors).length === 0) {\n      onDeposit(parseFloat(depositAmount));\n      // Clear deposit-related fields after successful deposit\n      setSelectedCard('');\n      setExpiryMonth('');\n      setExpiryYear('');\n      setCvv('');\n      setDepositAmount('');\n      alert('Deposit successful!');\n    } else {\n      setErrors(newErrors);\n    }\n  };\n\n  const handleWithdraw = () => {\n    const newErrors = {};\n\n    if (!bankName) {\n      newErrors.bankName = 'Please select a bank.';\n    }\n\n    if (!accountType) {\n      newErrors.accountType = 'Please select an account type.';\n    }\n\n    if (!accountNumber) {\n      newErrors.accountNumber = 'Please enter your account number.';\n    }\n\n    if (!swiftCode) {\n      newErrors.swiftCode = 'Please enter the SWIFT/BIC code.';\n    }\n\n    if (!bankTransitCode) {\n      newErrors.bankTransitCode = 'Please enter the bank transit code.';\n    }\n\n    if (!bankBranchCode) {\n      newErrors.bankBranchCode = 'Please enter the bank branch code.';\n    }\n\n    if (!withdrawalAmount || withdrawalAmount < 10 || withdrawalAmount > 50000) {\n      newErrors.withdrawalAmount = 'Withdrawal amount must be between $10.00 and $50,000.00.';\n    }\n\n    if (Object.keys(newErrors).length === 0) {\n      // Handle withdrawal logic here\n      alert('Withdrawal successful!');\n      // Clear withdrawal-related fields after successful withdrawal\n      setBankName('');\n      setAccountType('');\n      setAccountNumber('');\n      setSwiftCode('');\n      setBankTransitCode('');\n      setBankBranchCode('');\n      setWithdrawalAmount('');\n    } else {\n      setErrors(newErrors);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className={`wallet-popup ${isOpen ? 'open' : ''}`}>\n      <div className=\"wallet-popup-content\">\n        <div className=\"wallet-popup-header\">\n          <h2>\n            <img src={WalletVector} alt=\"Wallet\" className=\"wallet-icon\" /> Wallet\n          </h2>\n          <button className=\"wallet-close-btn\" onClick={onClose}>×</button>\n        </div>\n        <div className=\"wallet-tabs\">\n          <div\n            className={`wallet-tab ${activeTab === 'deposit' ? 'active' : ''}`}\n            onClick={() => setActiveTab('deposit')}\n          >\n            Deposit\n          </div>\n          <div\n            className={`wallet-tab ${activeTab === 'withdraw' ? 'active' : ''}`}\n            onClick={() => setActiveTab('withdraw')}\n          >\n            Withdraw\n          </div>\n          <div className=\"wallet-tab-fill\" style={{ left: activeTab === 'deposit' ? '0%' : '50%' }} />\n        </div>\n        <div className=\"wallet-balance-container\">\n          <div className=\"wallet-balance\">\n            ${walletAmount.toFixed(2)} <img src={DollarVector} alt=\"Dollar Icon\" className=\"dollar-icon\" />\n          </div>\n        </div>\n        <div className=\"wallet-content\">\n          {activeTab === 'deposit' && (\n            <div className=\"deposit-content\">\n              {/* Deposit content remains unchanged */}\n              {/* ... */}\n            </div>\n          )}\n          {activeTab === 'withdraw' && (\n            <div className=\"withdraw-content\">\n              <label htmlFor=\"bank-name\">Bank Name</label>\n              <select\n                id=\"bank-name\"\n                value={bankName}\n                onChange={(e) => setBankName(e.target.value)}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                name=\"bankName\"\n                className={errors.bankName ? (focused.bankName ? 'select-error-focused' : 'select-error') : ''}\n              >\n                <option value=\"\" disabled>Select a bank</option>\n                <option value=\"Bank of America\">Bank of America</option>\n                <option value=\"Chase\">Chase</option>\n                <option value=\"Wells Fargo\">Wells Fargo</option>\n                {/* Add more banks as needed */}\n              </select>\n              {errors.bankName && (\n                <div className=\"error-message\">\n                  <img src={ErrorVector} alt=\"Error\" /> {errors.bankName}\n                </div>\n              )}\n              <label htmlFor=\"account-type\">Account Type</label>\n              <select\n                id=\"account-type\"\n                value={accountType}\n                onChange={(e) => setAccountType(e.target.value)}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                name=\"accountType\"\n                className={errors.accountType ? (focused.accountType ? 'select-error-focused' : 'select-error') : ''}\n              >\n                <option value=\"\" disabled>Select account type</option>\n                <option value=\"Checking\">Checking</option>\n                <option value=\"Savings\">Savings</option>\n                {/* Add more account types as needed */}\n              </select>\n              {errors.accountType && (\n                <div className=\"error-message\">\n                  <img src={ErrorVector} alt=\"Error\" /> {errors.accountType}\n                </div>\n              )}\n              <label htmlFor=\"account-number\">Account Number</label>\n              <input\n                type=\"text\"\n                id=\"account-number\"\n                value={accountNumber}\n                onChange={(e) => setAccountNumber(e.target.value)}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                name=\"accountNumber\"\n                className={errors.accountNumber ? (focused.accountNumber ? 'input-error-focused' : 'input-error') : ''}\n              />\n              {errors.accountNumber && (\n                <div className=\"error-message\">\n                  <img src={ErrorVector} alt=\"Error\" /> {errors.accountNumber}\n                </div>\n              )}\n              <label htmlFor=\"swift-code\">SWIFT/BIC Code</label>\n              <input\n                type=\"text\"\n                id=\"swift-code\"\n                value={swiftCode}\n                onChange={(e) => setSwiftCode(e.target.value)}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                name=\"swiftCode\"\n                className={errors.swiftCode ? (focused.swiftCode ? 'input-error-focused' : 'input-error') : ''}\n              />\n              {errors.swiftCode && (\n                <div className=\"error-message\">\n                  <img src={ErrorVector} alt=\"Error\" /> {errors.swiftCode}\n                </div>\n              )}\n              <div className=\"bank-transit\">\n                <div className=\"bank-transit-item\">\n                  <label htmlFor=\"bank-transit-code\">Bank Transit Code</label>\n                  <input\n                    type=\"text\"\n                    id=\"bank-transit-code\"\n                    value={bankTransitCode}\n                    onChange={(e) => setBankTransitCode(e.target.value)}\n                    onBlur={handleBlur}\n                    onFocus={handleFocus}\n                    name=\"bankTransitCode\"\n                    className={errors.bankTransitCode ? (focused.bankTransitCode ? 'input-error-focused' : 'input-error') : ''}\n                  />\n                  {errors.bankTransitCode && (\n                    <div className=\"error-message\">\n                      <img src={ErrorVector} alt=\"Error\" /> {errors.bankTransitCode}\n                    </div>\n                  )}\n                </div>\n                <div className=\"bank-transit-item\">\n                  <label htmlFor=\"bank-branch-code\">Bank Branch Code</label>\n                  <input\n                    type=\"text\"\n                    id=\"bank-branch-code\"\n                    value={bankBranchCode}\n                    onChange={(e) => setBankBranchCode(e.target.value)}\n                    onBlur={handleBlur}\n                    onFocus={handleFocus}\n                    name=\"bankBranchCode\"\n                    className={errors.bankBranchCode ? (focused.bankBranchCode ? 'input-error-focused' : 'input-error') : ''}\n                  />\n                  {errors.bankBranchCode && (\n                    <div className=\"error-message\">\n                      <img src={ErrorVector} alt=\"Error\" /> {errors.bankBranchCode}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <label htmlFor=\"withdrawal-amount\">Withdrawal Amount (Min $10.00/Max $50,000.00)</label>\n              <input\n                type=\"number\"\n                id=\"withdrawal-amount\"\n                value={withdrawalAmount}\n                onChange={(e) => setWithdrawalAmount(e.target.value)}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                name=\"withdrawalAmount\"\n                className={errors.withdrawalAmount ? (focused.withdrawalAmount ? 'input-error-focused' : 'input-error') : ''}\n                min=\"10\"\n                max=\"50000\"\n              />\n              {errors.withdrawalAmount && (\n                <div className=\"error-message\">\n                  <img src={ErrorVector} alt=\"Error\" /> {errors.withdrawalAmount}\n                </div>\n              )}\n              <button className=\"withdraw-btn\" onClick={handleWithdraw}>Withdraw</button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletPopup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}